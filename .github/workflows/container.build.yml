name: Build Container Image

on:
  workflow_call:
    inputs:
      containerfile:
        required: false
        description: path to the container file
        default: Dockerfile
        type: string
      imagename:
        required: false
        description: name of the container image
        type: string
      release_branch:
        required: false
        description: name of the release branch
        default: main
        type: string

jobs:
  build:
    name: build and push image
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@44c2b7a8a4ea60a981eaca3cf939b5f4305c123b # v4.1.5
        with:
          fetch-depth: 0
    
      - name: set up docker
        uses: docker/setup-buildx-action@v3

      - name: determine version
        id: version
        uses: paulhatch/semantic-version@v5.4.0
        with:
          tag_prefix: v
          major_pattern: '/^(feat|fix|docs|style|refactor|perf|test|chore)(\([a-z ]+\))?!: (.|\n)*$/'
          minor_pattern: '/^(feat)(\([a-z ]+\))?: (.|\n)*$/'
          bump_each_commit: true
          bump_each_commit_patch_pattern: '/^(fix|refactor|perf)(\([a-z ]+\))?: (.|\n)*$/'
          version_format: ${major}.${minor}.${patch}

      - name: extract base image tag
        id: base
        run: |
          base=$(awk '/^FROM/ { image = $2 } END { print image }' ${{ inputs.containerfile }})
          base_tag_version=$(echo $base | awk -F: '{ print $NF }')
          base_tag_major=$(echo $base | awk -F: '{ print $NF }' | awk -F'.' ' { print $1 }')
          base_tag=$(echo $base | awk -F: '{ print $NF }' | awk -F'[0-9]' '{ print $1 }')
          echo "base_tag_version=$base_tag_version" >> $GITHUB_OUTPUT
          echo "base_tag_major=$base_tag_major" >> $GITHUB_OUTPUT
          echo "base_tag=$base_tag" >> $GITHUB_OUTPUT

      - name: generate docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: name=ghcr.io/${{ inputs.imagename || github.repository }}
          tags: |
            type=semver,pattern={{major}},enable=${{ !startsWith(steps.version.outputs.version, '0') }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}-${{ steps.base.outputs.base_tag_version }},enable=${{ !startsWith(steps.version.outputs.version, '0') }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}-${{ steps.base.outputs.base_tag_version }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}-${{ steps.base.outputs.base_tag_version }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}-${{ steps.base.outputs.base_tag_major }},enable=${{ !startsWith(steps.version.outputs.version, '0') }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}-${{ steps.base.outputs.base_tag_major }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}-${{ steps.base.outputs.base_tag_major }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}-${{ steps.base.outputs.base_tag }},enable=${{ !startsWith(steps.version.outputs.version, '0') }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}-${{ steps.base.outputs.base_tag }},value=${{ steps.version.outputs.version }}
            type=semver,pattern={{major}}.{{minor}}.{{patch}}-${{ steps.base.outputs.base_tag }},value=${{ steps.version.outputs.version }}
          flavor: latest=auto

      - name: login to registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: tag and push image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: ${{ inputs.containerfile }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: create release
        uses: softprops/action-gh-release@v2
        with:
          name: v${{ steps.version.outputs.version }}
          tag_name: v${{ steps.version.outputs.version }}
          prerelease: false
          generate_release_notes: true
